% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_optimum.R
\name{robust_find_optimum}
\alias{robust_find_optimum}
\title{Routine for more robust local optimum search of MASSIVE posterior, where
the search is repeated until a better value cannot be found any more.}
\usage{
robust_find_optimum(
  J,
  N,
  SS,
  sigma_G,
  prior_sd,
  skappa_X,
  skappa_Y,
  tol = 1e-06,
  post_fun = scaled_nl_posterior_log,
  gr_fun = scaled_nl_gradient_log,
  hess_fun = scaled_nl_hessian_log
)
}
\arguments{
\item{J}{Integer number of genetic instrumental variables.}

\item{N}{Integer number of observations.}

\item{SS}{Numeric matrix containing first- and second-order statistics.}

\item{sigma_G}{Numeric vector of genetic IV standard deviations.}

\item{prior_sd}{List of standard deviations for the parameter Gaussian priors.}

\item{skappa_X}{Scale-free confounding coefficient to exposure used for initialization.}

\item{skappa_Y}{Scale-free confounding coefficient to outcome used for initialization.}

\item{tol}{Numeric tolerance value used to decide if a better optimum was found.}

\item{post_fun}{Function for computing the IV model posterior value.}

\item{gr_fun}{Function for computing the IV model posterior gradient.}

\item{hess_fun}{Function for computing the IV model posterior Hessian.}
}
\value{
optim object (see \link[stats]{optim} containing optimum parameters,
the value obtained at the optimum, and the Hessian at the optimum.
}
\description{
Routine for more robust local optimum search of MASSIVE posterior, where
the search is repeated until a better value cannot be found any more.
}
\examples{
J <- 5 # number of instruments
N <- 1000 # number of samples
parameters <- random_Gaussian_parameters(J) 
EAF <- runif(J, 0.1, 0.9) # EAF random values
dat <- generate_data_MASSIVE_model(N, 2, EAF, parameters)
robust_find_optimum(
  J, N, dat$SS, binomial_sigma_G(dat$SS), 
  prior_sd = decode_IV_model(get_random_IV_model(J), 1, 0.01), 
  skappa_X = 1, skappa_Y = 1
)
}
