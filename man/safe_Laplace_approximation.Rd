% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Laplace_approximation.R
\name{safe_Laplace_approximation}
\alias{safe_Laplace_approximation}
\title{Routine for computing the Laplace approximation of the MASSIVE posterior using
smart initialization points to find all the conjectured optima. This 'safe'
version provides a fail-safe in case no optima are found with the smart
initialization, in which case the "guess" strategy is used instead.}
\usage{
safe_Laplace_approximation(
  J,
  N,
  SS,
  sigma_G,
  prior_sd,
  post_fun = scaled_nl_posterior_log,
  gr_fun = scaled_nl_gradient_log,
  hess_fun = scaled_nl_hessian_log,
  opt_fun = robust_find_optimum,
  starting_points = "smart"
)
}
\arguments{
\item{J}{Integer number of candidate instrumental variables.}

\item{N}{Integer number of observations.}

\item{SS}{Numeric matrix containing first- and second-order statistics.}

\item{sigma_G}{Numeric vector of instrument standard deviations.}

\item{prior_sd}{List of standard deviations for the parameter Gaussian priors.}

\item{post_fun}{Function for computing the IV model posterior value.}

\item{gr_fun}{Function for computing the IV model posterior gradient.}

\item{hess_fun}{Function for computing the IV model posterior Hessian.}

\item{opt_fun}{Function for finding the IV model posterior optima.}

\item{starting_points}{Character vector indicating how to pick the starting
points: "smart" or "guess" strategy?}
}
\value{
A list containing the Laplace approximation.
\itemize{
\item optima - List of optima found.
\item num_optima - Number of optima found on the posterior surface.
\item evidence - Numeric value of total approximation model evidence.
}
}
\description{
Routine for computing the Laplace approximation of the MASSIVE posterior using
smart initialization points to find all the conjectured optima. This 'safe'
version provides a fail-safe in case no optima are found with the smart
initialization, in which case the "guess" strategy is used instead.
}
\examples{
J <- 5 # number of instruments
N <- 1000 # number of samples
parameters <- random_Gaussian_parameters(J) 
EAF <- runif(J, 0.1, 0.9) # EAF random values
dat <- generate_data_MASSIVE_model(N, 2, EAF, parameters)
safe_Laplace_approximation(
  J, N, dat$SS, binomial_sigma_G(dat$SS), 
  decode_IV_model(get_random_IV_model(J), 1, 0.01)
)
}
